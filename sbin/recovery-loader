#!/sbin/busybox sh

BB=/sbin/busybox

$BB mount -t rootfs -o remount,rw rootfs

ln -s /sbin/busybox /sbin/sh

$BB chmod -R 777 /proc/

# protecting fuelgauge reset trigger.
$BB chmod 000 /sys/devices/platform/i2c-gpio.9/i2c-9/9-0036/power_supply/fuelgauge/fg_reset_soc

$BB mkdir /emmc-tmp
$BB chmod -R 777 /emmc-tmp

$BB rm -rf /sd-ext
$BB mkdir /sd-ext
$BB chmod -R 777 /sd-ext

$BB mkdir -p /storage/sdcard0
$BB mkdir /storage/sdcard1
$BB chmod -R 777 /storage

$BB rm -rf /etc
$BB mkdir /etc
$BB cat /res/etc/recovery.fstab > /etc/recovery.fstab

stop tvout

echo "0" > /sys/class/mdnie/mdnie/scenario
echo "1" > /sys/class/mdnie/mdnie/mode

$BB rm -rf /cache
$BB mkdir /cache
$BB chmod -R 777 /cache
$BB mount -t ext4 /dev/block/mmcblk0p7 /cache
$BB mkdir /cache/recovery
$BB chmod 770 /cache/recovery
$BB chown system.cache /cache/recovery

cd /
$BB mkdir -p /mnt/.secondrom/.secondrom
FS_SDCARD0=$(eval $(/sbin/blkid /dev/block/mmcblk0p11 | /sbin/busybox cut -c 24-); /sbin/busybox echo $TYPE);
if [ "$FS_SDCARD0" == "exfat" ]; then
	/sbin/mount.exfat /dev/block/mmcblk0p11 /mnt/.secondrom
else
	mount -t $FS_SDCARD0 /dev/block/mmcblk0p11 /mnt/.secondrom
fi;
$BB rm -rf /secondrom_cache
$BB mkdir -p /secondrom_cache
$BB rm -rf /secondrom_data
$BB mkdir -p /secondrom_data
$BB rm -rf /secondrom_system
$BB mkdir -p /secondrom_system

echo "75" > /sys/class/timed_output/vibrator/pwm_value
echo "102" > /sys/devices/virtual/sec/sec_key/set_homekey

# Enable Dual Mount in recovery! and fix .android_secure backup and restore.
echo "/dev/block/mmcblk0p11" > /sys/devices/virtual/android_usb/android0/f_mass_storage/lun0/file;
if [ -e /dev/block/mmcblk1p1 ]; then
	echo "/dev/block/mmcblk1p1" > /sys/devices/virtual/android_usb/android0/f_mass_storage/lun1/file;
	# for now set DEADLINE gov for External SD to fix file transfer via USB
	echo "deadline" > /sys/block/mmcblk1/queue/scheduler;
fi;

echo 1 > /sbin/recovery-is-running
recovery
